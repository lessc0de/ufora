/***************************************************************************
    Copyright 2016 Ufora Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
****************************************************************************/

#pragma once

#include "PythonAst.hppml"
#include "../../Language/Function.hppml"
#include "../../../core/PolymorphicSharedPtr.hpp"
#include "PythonConstantConverter.hppml"
#include "PythonListConverter.hppml"
#include "../../VectorDataManager/VectorDataManager.hppml"

namespace Fora {

class PythonBinaryStreamToImplval :
        public PolymorphicSharedPtrBase<PythonBinaryStreamToImplval> {
public:
    PythonBinaryStreamToImplval(
            PolymorphicSharedPtr<VectorDataManager> inVDM,
            PolymorphicSharedPtr<PythonConstantConverter> inConstantConverter,
            PolymorphicSharedPtr<PythonListConverter> inPyListConverter
            );

    void read(IBinaryStream& stream);

    Nullable<ImplValContainer> getObjectById(int64_t id) const;

    const static uint8_t CODE_NONE=1;
    const static uint8_t CODE_INT=2;
    const static uint8_t CODE_LONG=3;
    const static uint8_t CODE_FLOAT=4;
    const static uint8_t CODE_BOOL=5;
    const static uint8_t CODE_STR=6;
    const static uint8_t CODE_LIST_OF_PRIMITIVES=7;
    const static uint8_t CODE_TUPLE=8;
    const static uint8_t CODE_PACKED_HOMOGENOUS_DATA=9;
    const static uint8_t CODE_LIST=10;
    const static uint8_t CODE_FILE=11;
    const static uint8_t CODE_DICT=12;
    const static uint8_t CODE_REMOTE_PY_OBJECT=13;
    const static uint8_t CODE_BUILTIN_EXCEPTION_INSTANCE=14;
    const static uint8_t CODE_NAMED_SINGLETON=15;
    const static uint8_t CODE_FUNCTION=16;
    const static uint8_t CODE_CLASS=17;
    const static uint8_t CODE_UNCONVERTIBLE=18;
    const static uint8_t CODE_CLASS_INSTANCE=19;
    const static uint8_t CODE_INSTANCE_METHOD=20;
    const static uint8_t CODE_WITH_BLOCK=21;
    const static uint8_t CODE_PY_ABORT_EXCEPTION=22;
    const static uint8_t CODE_STACKTRACE_AS_JSON=23;

protected:
    ImplValContainer readPrimitive(IBinaryStream& stream, uint8_t code);

    std::map<int64_t, ImplValContainer> mValues;

    PolymorphicSharedPtr<VectorDataManager> mVDM;

    PolymorphicSharedPtr<PythonConstantConverter> mConstantConverter;

    PolymorphicSharedPtr<PythonListConverter> mListConverter;
};

}
